services:
  vot:
    build: .
    container_name: vot
    restart: always
    profiles:
      - prod
    env_file:
      - .env.prod
    networks:
      - vot
    expose:
      - 8080
    depends_on:
      - postgres
      - lavalink
      - redis
  frontend:
    build: ../VOT-frontend
    container_name: vot-frontend
    restart: always
    profiles:
      - prod
    env_file:
      - .env.prod.frontend
    networks:
      - vot
    expose:
      - 3000
    depends_on:
      - vot
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    profiles:
      - prod
    environment:
      - POSTGRES_PASSWORD=ecNkXsfsu66NGSxIGyivymbUgGl
      - POSTGRES_USER=bot
      - POSTGRES_DB=vot
    networks:
      - vot
    expose:
      - 2333
    volumes:
      - ./db/data_prod:/var/lib/postgresql/data
  lavalink:
    image: ghcr.io/lavalink-devs/lavalink
    container_name: lavalink
    restart: always
    profiles:
      - prod
    environment:
      - _JAVA_OPTIONS=-Xmx6G
    volumes:
      - ./application.yml:/opt/Lavalink/application.yml
      - ./plugins/:/opt/Lavalink/plugins/
    networks:
      - vot
    expose:
      - 2333
  redis:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    container_name: redis
    restart: always
    ulimits:
      memlock: -1
    profiles:
      - prod
    networks:
      - vot
    expose:
      - 6379
    volumes:
      - ./db/cache_prod:/data
  nginx:
    image: nginx:latest
    container_name: nginx
    profiles:
      - prod
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/conf.d
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
      - ./nginx/nginxconfig.io:/etc/nginx/nginxconfig.io
    depends_on:
      - frontend
    networks:
      - vot
  postgres_dev:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    profiles:
      - dev
    environment:
      - POSTGRES_PASSWORD=iamlikewaytoooolazy
      - POSTGRES_USER=postgres
      - POSTGRES_DB=vot
    ports:
      - '5432:5432'
    volumes:
      - ./db/data:/var/lib/postgresql/data
  lavalink_dev:
    image: ghcr.io/lavalink-devs/lavalink
    container_name: lavalink
    restart: unless-stopped
    profiles:
      - dev
    environment:
      - _JAVA_OPTIONS=-Xmx6G
    volumes:
      - ./application.yml:/opt/Lavalink/application.yml
      - ./plugins/:/opt/Lavalink/plugins/:rw
    ports:
      - '2333:2333'
  redis_dev:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    container_name: redis
    restart: unless-stopped
    ulimits:
      memlock: -1
    profiles:
      - dev
    ports:
      - '6379:6379'
    volumes:
      - ./db/cache:/data
networks:
  vot:
    name: vot
